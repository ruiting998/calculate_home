"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var Timeline = /** @class */function () {
  function Timeline(playComponent) {
    this.frame = 0;
    this.playState = 'play';
    this.animations = [];
    this.play = playComponent;
  }
  Timeline.prototype.setPlayState = function (state) {
    this.playState = state;
    var animator = this.play.animator;
    switch (state) {
      case 'play':
        animator.play();
        break;
      case 'pause':
        animator.pause();
        break;
      case 'finish':
        animator.finish();
        break;
      default:
        break;
    }
  };
  Timeline.prototype.goTo = function (frame) {
    if (!frame) return;
    var animator = this.play.animator;
    animator.goTo(frame);
  };
  Timeline.prototype.add = function (animation) {
    var frame = this.frame;
    if (this.animations[frame]) {
      animation.map(function (d) {
        return d.cancel();
      });
      return;
    }
    this.animations[frame] = animation;
  };
  Timeline.prototype.getAnimation = function () {
    var frame = this.frame;
    return this.animations[frame];
  };
  Timeline.prototype.push = function (animation) {
    var frame = this.frame;
    if (!this.animations[frame]) return;
    this.animations[0] = this.animations[frame].concat(animation);
  };
  Timeline.prototype.pop = function () {
    var frame = this.frame;
    this.animations[frame].pop();
  };
  Timeline.prototype.delete = function (animation) {
    var frame = this.frame;
    if (!animation || !this.animations[frame]) return;
    this.animations[frame].filter(function (d) {
      return d !== animation;
    });
  };
  Timeline.prototype.replace = function (next) {
    var _this = this;
    var frame = this.frame;
    if (!this.animations[frame]) return;
    var newAnimation = next.map(function (index) {
      return _this.animations[frame].map(function (d) {
        if (index === d) {
          return index;
        }
        return d;
      });
    });
    this.animations = newAnimation;
  };
  return Timeline;
}();
var _default = Timeline;
exports.default = _default;