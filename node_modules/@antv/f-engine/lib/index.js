"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Canvas", {
  enumerable: true,
  get: function get() {
    return _canvas.default;
  }
});
Object.defineProperty(exports, "CanvasRenderer", {
  enumerable: true,
  get: function get() {
    return _gMobileCanvas.Renderer;
  }
});
Object.defineProperty(exports, "Children", {
  enumerable: true,
  get: function get() {
    return _children.default;
  }
});
Object.defineProperty(exports, "Component", {
  enumerable: true,
  get: function get() {
    return _component.default;
  }
});
Object.defineProperty(exports, "Fragment", {
  enumerable: true,
  get: function get() {
    return _jsx.Fragment;
  }
});
Object.defineProperty(exports, "Gesture", {
  enumerable: true,
  get: function get() {
    return _gesture.default;
  }
});
Object.defineProperty(exports, "Player", {
  enumerable: true,
  get: function get() {
    return _player.default;
  }
});
exports.Smooth = void 0;
Object.defineProperty(exports, "Timeline", {
  enumerable: true,
  get: function get() {
    return _timeline.default;
  }
});
Object.defineProperty(exports, "computeLayout", {
  enumerable: true,
  get: function get() {
    return _render.computeLayout;
  }
});
Object.defineProperty(exports, "createContext", {
  enumerable: true,
  get: function get() {
    return _createContext.default;
  }
});
Object.defineProperty(exports, "createElement", {
  enumerable: true,
  get: function get() {
    return _jsx.jsx;
  }
});
Object.defineProperty(exports, "createRef", {
  enumerable: true,
  get: function get() {
    return _createRef.default;
  }
});
Object.defineProperty(exports, "isEqual", {
  enumerable: true,
  get: function get() {
    return _equal.default;
  }
});
Object.defineProperty(exports, "jsx", {
  enumerable: true,
  get: function get() {
    return _jsx.jsx;
  }
});
Object.defineProperty(exports, "registerTag", {
  enumerable: true,
  get: function get() {
    return _tag.registerTag;
  }
});
var _render = require("./canvas/render");
var _gMobileCanvas = require("@antv/g-mobile-canvas");
var Smooth = _interopRequireWildcard(require("./shape/util/smooth"));
exports.Smooth = Smooth;
var _jsx = require("./jsx");
var _tag = require("./jsx/tag");
var _canvas = _interopRequireDefault(require("./canvas"));
var _component = _interopRequireDefault(require("./component"));
var _children = _interopRequireDefault(require("./children"));
var _createRef = _interopRequireDefault(require("./createRef"));
var _createContext = _interopRequireDefault(require("./createContext"));
var _timeline = _interopRequireDefault(require("./timeline"));
var _gesture = _interopRequireDefault(require("./gesture"));
var _equal = _interopRequireDefault(require("./canvas/equal"));
var _player = _interopRequireDefault(require("./player"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }