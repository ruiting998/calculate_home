import { __extends } from "tslib";
import Component from './component';
import Timeline from './canvas/timeline';
var Player = /** @class */function (_super) {
  __extends(Player, _super);
  function Player() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Player.prototype.setPlayState = function () {
    var _a = this,
      props = _a.props,
      context = _a.context;
    var frame = props.frame,
      playState = props.state;
    var timeline = context.timeline;
    timeline.goTo(frame);
    timeline.setPlayState(playState);
  };
  Player.prototype.willMount = function () {
    this.context.timeline = new Timeline(this);
  };
  Player.prototype.animationWillPlay = function () {
    var _a = this,
      animator = _a.animator,
      context = _a.context;
    // @ts-ignore
    var timeline = context.timeline;
    var animations = animator.animations;
    timeline.add(animations);
    animator.animations = timeline.getAnimation();
    this.setPlayState();
  };
  Player.prototype.render = function () {
    return this.props.children;
  };
  return Player;
}(Component);
export default Player;