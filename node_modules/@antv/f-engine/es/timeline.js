import { __extends } from "tslib";
import Component from './component';
import Children from './children';
var Timeline = /** @class */function (_super) {
  __extends(Timeline, _super);
  function Timeline(props) {
    var _this = _super.call(this, props) || this;
    _this.next = function () {
      var _a = _this,
        state = _a.state,
        props = _a.props;
      var index = state.index,
        count = state.count,
        delay = state.delay;
      var loop = props.loop,
        _b = props.autoPlay,
        autoPlay = _b === void 0 ? true : _b;
      var next = loop ? (index + 1) % count : index + 1;
      if (next < count && autoPlay) {
        setTimeout(function () {
          _this.setState({
            index: next
          });
        }, delay || 0);
      }
    };
    var delay = props.delay,
      _a = props.start,
      start = _a === void 0 ? 0 : _a,
      children = props.children;
    var count = Children.toArray(children).length;
    _this.state = {
      delay: delay,
      count: count,
      index: start
    };
    return _this;
  }
  Timeline.prototype.didMount = function () {
    var _a = this.props.autoPlay,
      autoPlay = _a === void 0 ? true : _a;
    if (autoPlay) {
      this.animator.on('end', this.next);
    }
  };
  Timeline.prototype.didUnmount = function () {
    this.animator.off('end', this.next);
  };
  Timeline.prototype.render = function () {
    var _a = this,
      state = _a.state,
      props = _a.props;
    var children = props.children;
    var index = state.index;
    var childrenArray = Children.toArray(children);
    return childrenArray[index];
  };
  return Timeline;
}(Component);
export default Timeline;