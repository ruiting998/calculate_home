import { Format, ResourceType, SamplerFormatKind, Texture, TextureDescriptor } from '@antv/g-plugin-device-renderer';
import type { Device_GL } from './Device';
import { ResourceBase_GL } from './ResourceBase';
export declare class Texture_GL extends ResourceBase_GL implements Texture {
    type: ResourceType.Texture;
    gl_texture: WebGLTexture;
    gl_target: GLenum;
    pixelFormat: Format;
    width: number;
    height: number;
    depth: number;
    numLevels: number;
    immutable: boolean;
    pixelStore: Partial<{
        packAlignment: number;
        unpackAlignment: number;
        unpackFlipY: boolean;
    }>;
    mipmaps: boolean;
    formatKind: SamplerFormatKind;
    textureIndex: number;
    constructor({ id, device, descriptor, fake, }: {
        id: number;
        device: Device_GL;
        descriptor: TextureDescriptor;
        fake?: boolean;
    });
    setImageData(data: TexImageSource | ArrayBufferView[], level: number): void;
    destroy(): void;
    private clampNumLevels;
    private preprocessImage;
    private generateMipmap;
    private isNPOT;
}
