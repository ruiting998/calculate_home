import type { DisplayObject, FederatedPointerEvent, PointLike as Point } from '@antv/g-lite';
import EventEmitter from 'eventemitter3';
type Direction = 'none' | 'left' | 'right' | 'down' | 'up';
export interface GestureEvent extends FederatedPointerEvent {
    points: Point[];
    direction: Direction;
    deltaX: number;
    deltaY: number;
    zoom: number;
    center: Point;
    velocity: number;
}
declare class Gesture extends EventEmitter {
    private el;
    private evCache;
    private startTime;
    private pressTimeout;
    private startPoints;
    private processEvent;
    private startDistance;
    private center;
    private eventType;
    private direction;
    private lastMoveTime;
    private prevMovePoint;
    private prevMoveTime;
    private lastMovePoint;
    private throttleTimer;
    private emitThrottles;
    constructor(el: DisplayObject);
    private _initEvent;
    private _start;
    private _move;
    private _end;
    private _cancel;
    private getEventType;
    private enable;
    private isProcess;
    private emitStart;
    private _throttleEmit;
    private emitEnd;
    private pushEvent;
    private clearPressTimeout;
    private reset;
}
export default Gesture;
